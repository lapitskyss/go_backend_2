// Code generated by protoc-gen-go-grpc. DO NOT EDIT.

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// PriceListServiceClient is the client API for PriceListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type PriceListServiceClient interface {
	GetPriceList(ctx context.Context, in *GetPriceListRequest, opts ...grpc.CallOption) (*PriceList, error)
	CreatedPriceList(ctx context.Context, in *CreatePriceListRequest, opts ...grpc.CallOption) (*PriceList, error)
	UpdatePriceList(ctx context.Context, in *UpdatePriceListRequest, opts ...grpc.CallOption) (*PriceList, error)
	AddProductToPriceList(ctx context.Context, in *AddProductToPriceListRequest, opts ...grpc.CallOption) (*PriceList, error)
	RemoveProductFromPriceList(ctx context.Context, in *RemoveProductFromPriceListRequest, opts ...grpc.CallOption) (*PriceList, error)
	DeletePriceList(ctx context.Context, in *DeletePriceListRequest, opts ...grpc.CallOption) (*DeleteFromPriceListResponse, error)
}

type priceListServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewPriceListServiceClient(cc grpc.ClientConnInterface) PriceListServiceClient {
	return &priceListServiceClient{cc}
}

func (c *priceListServiceClient) GetPriceList(ctx context.Context, in *GetPriceListRequest, opts ...grpc.CallOption) (*PriceList, error) {
	out := new(PriceList)
	err := c.cc.Invoke(ctx, "/pricelist.PriceListService/GetPriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceListServiceClient) CreatedPriceList(ctx context.Context, in *CreatePriceListRequest, opts ...grpc.CallOption) (*PriceList, error) {
	out := new(PriceList)
	err := c.cc.Invoke(ctx, "/pricelist.PriceListService/CreatedPriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceListServiceClient) UpdatePriceList(ctx context.Context, in *UpdatePriceListRequest, opts ...grpc.CallOption) (*PriceList, error) {
	out := new(PriceList)
	err := c.cc.Invoke(ctx, "/pricelist.PriceListService/UpdatePriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceListServiceClient) AddProductToPriceList(ctx context.Context, in *AddProductToPriceListRequest, opts ...grpc.CallOption) (*PriceList, error) {
	out := new(PriceList)
	err := c.cc.Invoke(ctx, "/pricelist.PriceListService/AddProductToPriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceListServiceClient) RemoveProductFromPriceList(ctx context.Context, in *RemoveProductFromPriceListRequest, opts ...grpc.CallOption) (*PriceList, error) {
	out := new(PriceList)
	err := c.cc.Invoke(ctx, "/pricelist.PriceListService/RemoveProductFromPriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *priceListServiceClient) DeletePriceList(ctx context.Context, in *DeletePriceListRequest, opts ...grpc.CallOption) (*DeleteFromPriceListResponse, error) {
	out := new(DeleteFromPriceListResponse)
	err := c.cc.Invoke(ctx, "/pricelist.PriceListService/DeletePriceList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PriceListServiceServer is the server API for PriceListService service.
// All implementations must embed UnimplementedPriceListServiceServer
// for forward compatibility
type PriceListServiceServer interface {
	GetPriceList(context.Context, *GetPriceListRequest) (*PriceList, error)
	CreatedPriceList(context.Context, *CreatePriceListRequest) (*PriceList, error)
	UpdatePriceList(context.Context, *UpdatePriceListRequest) (*PriceList, error)
	AddProductToPriceList(context.Context, *AddProductToPriceListRequest) (*PriceList, error)
	RemoveProductFromPriceList(context.Context, *RemoveProductFromPriceListRequest) (*PriceList, error)
	DeletePriceList(context.Context, *DeletePriceListRequest) (*DeleteFromPriceListResponse, error)
	mustEmbedUnimplementedPriceListServiceServer()
}

// UnimplementedPriceListServiceServer must be embedded to have forward compatible implementations.
type UnimplementedPriceListServiceServer struct {
}

func (UnimplementedPriceListServiceServer) GetPriceList(context.Context, *GetPriceListRequest) (*PriceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPriceList not implemented")
}
func (UnimplementedPriceListServiceServer) CreatedPriceList(context.Context, *CreatePriceListRequest) (*PriceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatedPriceList not implemented")
}
func (UnimplementedPriceListServiceServer) UpdatePriceList(context.Context, *UpdatePriceListRequest) (*PriceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePriceList not implemented")
}
func (UnimplementedPriceListServiceServer) AddProductToPriceList(context.Context, *AddProductToPriceListRequest) (*PriceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddProductToPriceList not implemented")
}
func (UnimplementedPriceListServiceServer) RemoveProductFromPriceList(context.Context, *RemoveProductFromPriceListRequest) (*PriceList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveProductFromPriceList not implemented")
}
func (UnimplementedPriceListServiceServer) DeletePriceList(context.Context, *DeletePriceListRequest) (*DeleteFromPriceListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePriceList not implemented")
}
func (UnimplementedPriceListServiceServer) mustEmbedUnimplementedPriceListServiceServer() {}

// UnsafePriceListServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to PriceListServiceServer will
// result in compilation errors.
type UnsafePriceListServiceServer interface {
	mustEmbedUnimplementedPriceListServiceServer()
}

func RegisterPriceListServiceServer(s grpc.ServiceRegistrar, srv PriceListServiceServer) {
	s.RegisterService(&PriceListService_ServiceDesc, srv)
}

func _PriceListService_GetPriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPriceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceListServiceServer).GetPriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelist.PriceListService/GetPriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceListServiceServer).GetPriceList(ctx, req.(*GetPriceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PriceListService_CreatedPriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePriceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceListServiceServer).CreatedPriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelist.PriceListService/CreatedPriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceListServiceServer).CreatedPriceList(ctx, req.(*CreatePriceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PriceListService_UpdatePriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePriceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceListServiceServer).UpdatePriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelist.PriceListService/UpdatePriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceListServiceServer).UpdatePriceList(ctx, req.(*UpdatePriceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PriceListService_AddProductToPriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddProductToPriceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceListServiceServer).AddProductToPriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelist.PriceListService/AddProductToPriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceListServiceServer).AddProductToPriceList(ctx, req.(*AddProductToPriceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PriceListService_RemoveProductFromPriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveProductFromPriceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceListServiceServer).RemoveProductFromPriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelist.PriceListService/RemoveProductFromPriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceListServiceServer).RemoveProductFromPriceList(ctx, req.(*RemoveProductFromPriceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PriceListService_DeletePriceList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeletePriceListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PriceListServiceServer).DeletePriceList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pricelist.PriceListService/DeletePriceList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PriceListServiceServer).DeletePriceList(ctx, req.(*DeletePriceListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// PriceListService_ServiceDesc is the grpc.ServiceDesc for PriceListService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var PriceListService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "pricelist.PriceListService",
	HandlerType: (*PriceListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPriceList",
			Handler:    _PriceListService_GetPriceList_Handler,
		},
		{
			MethodName: "CreatedPriceList",
			Handler:    _PriceListService_CreatedPriceList_Handler,
		},
		{
			MethodName: "UpdatePriceList",
			Handler:    _PriceListService_UpdatePriceList_Handler,
		},
		{
			MethodName: "AddProductToPriceList",
			Handler:    _PriceListService_AddProductToPriceList_Handler,
		},
		{
			MethodName: "RemoveProductFromPriceList",
			Handler:    _PriceListService_RemoveProductFromPriceList_Handler,
		},
		{
			MethodName: "DeletePriceList",
			Handler:    _PriceListService_DeletePriceList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pricelist.proto",
}
